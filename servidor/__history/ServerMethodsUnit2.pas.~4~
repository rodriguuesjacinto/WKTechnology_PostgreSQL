unit ServerMethodsUnit2;

interface

uses System.SysUtils, System.Classes, System.Json,
    DataSnap.DSProviderDataModuleAdapter,
    Datasnap.DSServer, Datasnap.DSAuth;

type
  TServerMethods2 = class(TDSServerModule)
  private
    { Private declarations }
  public
    { Public declarations }
    function EchoString(Value: string): string;
    function ReverseString(Value: string): string;

     function Pessoa(): TJSONObject ;
     function AcceptPessoa(const AID_Pessoa: Integer): TJSONObject ;
     function UpdatePessoa(): TJSONObject ;
     function CancelPessoa(const AID_Pessoa: Integer): TJSONObject ;

  end;

implementation

{%CLASSGROUP 'System.Classes.TPersistent'}

{$R *.dfm}

uses System.StrUtils;

function TServerMethods2.EchoString(Value: string): string;
begin
  Result := Value;
end;

function TServerMethods2.ReverseString(Value: string): string;
begin
  Result := System.StrUtils.ReverseString(Value);
end;

function TServerMethods2.Pessoa(): TJSONObject;
var
  //controllerClientes : TControllerClientes ;
  jsonObj : TJSONObject ;
begin
  {  controllerClientes := TControllerClientes.Create;
    controllerClientes.ModelClientes.intidclientes := AID_Pessoa ;

    // Create dataset list
    Result := TFDJSONDataSets.Create;
    // Add departments dataset
    TFDJSONDataSetsWriter.ListAdd(Result, controllerClientes.selecionar);
    // Add employees dataset
    TFDJSONDataSetsWriter.ListAdd(Result, controllerClientes.selecionar); }
    try
      jsonObj := TJSONObject.Create ;
      jsonObj.AddPair('Menssagem','Consumindo Pessoa') ;
      Result := jsonObj  ;
   finally
      jsonObj.DisposeOf ;
    end;
end;

function TServerMethods2.UpdatePessoa: TJSONObject;
var
    jsonObj : TJSONObject ;
begin
    try
      jsonObj := TJSONObject.Create ;
      jsonObj.AddPair('Menssagem','Consumindo UpdatePessoa')  ;
      Result := jsonObj  ;
   finally
      jsonObj.DisposeOf ;
    end;
end;

function TServerMethods2.AcceptPessoa(const AID_Pessoa: Integer): TJSONObject;
var
    jsonObj : TJSONObject ;
begin
    try
      jsonObj := TJSONObject.Create ;
      jsonObj.AddPair('Menssagem','Consumindo AcceptPessoa') ;
      Result := jsonObj  ;
   finally
      jsonObj.DisposeOf ;
    end;
end;

function TServerMethods2.CancelPessoa(const AID_Pessoa: Integer): TJSONObject;
var
    jsonObj : TJSONObject ;
begin
    try
      jsonObj := TJSONObject.Create ;
      jsonObj.AddPair('Menssagem','Consumindo CancelPessoa') ;
      Result := jsonObj  ;
   finally
      jsonObj.DisposeOf ;
    end;
end;

end.


